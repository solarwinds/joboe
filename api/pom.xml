<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>appoptics-sdk</artifactId>
  <version>${api.version}${is.snapshot}</version>
  <parent>
    <groupId>com.appoptics.agent.java</groupId>
    <artifactId>appoptics-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <dependencies>
  	<dependency>
      <groupId>com.appoptics.agent.java</groupId>
      <artifactId>agent</artifactId>
      <version>${agent.version}</version>
      <scope>provided</scope>
  	</dependency>
  	<dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${basedir}</directory>
        <targetPath>${project.build.outputDirectory}/META-INF</targetPath>
        <filtering>false</filtering>
        <includes>
          <include>LICENSE.txt</include>
        </includes>
      </resource>
    </resources>

  	<finalName>appoptics-sdk</finalName>
  	<plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12</version>
        <configuration>
        	<excludes>
<!--         	delay the test of integration test till the 'integration-test' phase -->
        		<exclude>**/*IntegrationTest.java</exclude>
        	</excludes>
       	</configuration>
      </plugin>

	  <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
	            <includes>
	          		<include>**/*IntegrationTest.java</include>
	            </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
	  
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
			<goals>
              <goal>javadoc</goal>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
		  <excludePackageNames>com.appoptics.api.ext.impl:com.appoptics.api.ext.model</excludePackageNames>
          <show>public</show>
          <source>6</source>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.2.28.v20190418</version> <!-- Do not use other versions (especially older ones), run-forked on those versions do not work properly -->
        <configuration>
          <scanIntervalSeconds>10</scanIntervalSeconds>
          <stopPort>8005</stopPort>
          <stopKey>STOP</stopKey>
          <contextPath>/</contextPath>
     	  <webAppSourceDirectory>${basedir}/integration-test/src/main/webapp</webAppSourceDirectory>
     	  <waitForChild>false</waitForChild>
          <supportedPackagings>
            <supportedPackaging>jar</supportedPackaging>
          </supportedPackagings>
        </configuration>
        <dependencies>
        	<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-core</artifactId>
				<version>2.3.1.2</version>
			</dependency>
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>1.1.1</version>
          <type>jar</type>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jcl</artifactId>
          <version>1.7.3</version>
          <type>jar</type>
        </dependency>
        <dependency>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
          <version>1.2.17</version>
          <type>jar</type>
        </dependency>

        </dependencies>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>run-forked</goal>
            </goals>
            <configuration>
            	<jvmArgs>-javaagent:${basedir}/../agent/target/appoptics-agent.jar=config=${basedir}/../agent/conf/javaagent.json,sample_rate=1000000 -classpath "{basedir}/target/appoptics-sdk.jar" -Dslf4j=false -Dlog4j.configuration=file:./integration-test/src/main/resources/log4j.properties</jvmArgs> <!-- java agent with the appoptics-sdk.jar just built -->
<!--             	<jvmArgs>-classpath "{basedir}/target/appoptics-sdk.jar" -Dslf4j=false -Dlog4j.configuration=file:./integration-test/src/main/resources/log4j.properties</jvmArgs>   params for w/o javaagent-->
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
         </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>

        <executions>
          <execution>
            <id>gpg-sign</id>
            <phase>deploy</phase>
            <goals>
              <goal>sign</goal>
            </goals>
            <configuration>
              <keyname>appoptics-agent</keyname>
              <passphrase>${gpg.passphrase}</passphrase>
              <!-- Prevent gpg from using pinentry programs -->
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
  
  
</project>
