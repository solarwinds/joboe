<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.tracelytics.testapp</groupId>
  <artifactId>testejb3-webapp-jboss7</artifactId>
  <version>1.0</version>
  <packaging>war</packaging>

  <name>testejb3-webapp-jboss7</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

   <dependencyManagement>
      <dependencies>
         <!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
         <!-- JBoss distributes a complete set of Java EE 6 APIs including
a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
a collection) of artifacts. We use this here so that we always get the correct
versions of artifacts. Here we use the jboss-javaee-6.0 stack (you can
read this as the JBoss stack of the Java EE 6 APIs). You can actually
use this stack with any version of JBoss AS that implements Java EE 6, not
just JBoss AS 7! -->
         <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>3.0.0.Final</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>

         <dependency>
             <groupId>org.jboss.as</groupId>
             <artifactId>jboss-as-ejb-client-bom</artifactId>
             <version>7.1.0.Final</version>
             <type>pom</type>
             <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.2</version>
        <scope>provided</scope>
    </dependency>

  <!-- JBoss EJB client API jar. We use runtime scope because the EJB client API
isn't directly used in this example. We just need it in our runtime classpath -->

      <dependency>
         <groupId>org.jboss.spec.javax.transaction</groupId>
         <artifactId>jboss-transaction-api_1.1_spec</artifactId>
         <scope>runtime</scope>
      </dependency>

      <!-- Import the EJB 3.1 API, we use runtime scope because we aren't using any direct
reference to EJB spec API in our client code -->
      <dependency>
         <groupId>org.jboss.spec.javax.ejb</groupId>
         <artifactId>jboss-ejb-api_3.1_spec</artifactId>
      </dependency>

       <dependency>
           <groupId>org.jboss</groupId>
           <artifactId>jboss-ejb-client</artifactId>
       </dependency>

       <!-- client communications with the server use XNIO -->
       <dependency>
           <groupId>org.jboss.xnio</groupId>
           <artifactId>xnio-api</artifactId>
       </dependency>

       <dependency>
           <groupId>org.jboss.xnio</groupId>
           <artifactId>xnio-nio</artifactId>
       </dependency>

      <!-- The client needs JBoss remoting to access the server -->
       <dependency>
            <groupId>org.jboss.remoting3</groupId>
            <artifactId>jboss-remoting</artifactId>
        </dependency>

      <!-- Remote EJB accesses can be secured -->
       <dependency>
           <groupId>org.jboss.sasl</groupId>
           <artifactId>jboss-sasl</artifactId>
       </dependency>

       <!-- data serialization for invoking remote EJBs -->
       <dependency>
           <groupId>org.jboss.marshalling</groupId>
           <artifactId>jboss-marshalling-river</artifactId>
       </dependency>

       <!-- data serialization for invoking remote EJBs -->
       <dependency>
           <groupId>org.jboss.as</groupId>
           <artifactId>jboss-as-naming</artifactId>
       </dependency>
    <!--
    <dependency>
        <groupId>org.jboss.jbossas</groupId>
        <artifactId>jboss-as-jbossas-remoting</artifactId>
        <version>5.1.0.GA</version>
        <scope>provided</scope>
    </dependency>
    -->

    <dependency>
      <groupId>com.tracelytics.testapp</groupId>
      <artifactId>testejb3</artifactId>
      <version>1.0</version>
    </dependency>

  </dependencies>


  <build>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12</version>
        <configuration>
          <parallel>classes</parallel>
        </configuration>
      </plugin>

      <plugin>            
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <webXml>src/main/resources/WEB-INF/web.xml</webXml>        
        </configuration>
      </plugin>
     
    </plugins>
  </build>

  <repositories>
    <repository>
     <id>jboss-public-repository-group</id>
     <name>JBoss Public Maven Repository Group</name>
     <url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
     <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </repository>
    <repository>
       <id>jboss-deprecated-repository</id>
       <name>JBoss Deprecated Maven Repository</name>
       <url>https://repository.jboss.org/nexus/content/repositories/deprecated/</url>
       <layout>default</layout>
       <releases>
         <enabled>true</enabled>
         <updatePolicy>never</updatePolicy>
       </releases>
       <snapshots>
         <enabled>false</enabled>
         <updatePolicy>never</updatePolicy>
       </snapshots>
    </repository>
  </repositories>

</project>
